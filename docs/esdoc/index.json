[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "lib/arch.js",
    "content": "/**\n * @todo more reason for existence\n * @public\n */\nconst arch = module.exports = {\n  // TODO: maybe fs?\n  /** node.js `path` library */\n  get Path () { return require('path') },\n  get Fs () { return require('fs') },\n  defineRequires (dirname, target, ...names) {\n    return Object.defineProperties(target, names.reduce((obj, name) => {\n      obj[name] = { get: () => require(arch.Path.resolve(dirname, name)) }\n      return obj\n    }, {}))\n  },\n  /**\n   *\n   * @param {string} aPath\n   * @param {string} replacementExt (optional), giving '' strips off any extension\n   */\n  getResPathFor (aPath, replacementExt = null) {\n    let resPath = arch.Path.join(require('./cfg').resDir, aPath)\n    if (replacementExt) {\n      while (arch.Path.extname(resPath) !== '') {\n        resPath = resPath.replace(arch.Path.extname(resPath), '')\n      }\n      resPath += replacementExt\n    }\n    return resPath\n  },\n  /**\n * take all inputs and turn them into a single clean query object\n * @param {...object} arguments one or more input objects to clean of sub-objects and return as one query.\n * @note order of president follows argument order. #1 overrides #0, etc.\n * @return {object} single object with all non object properties copied onto it.\n **/\n  cleanQuery () {\n    const query = {}\n    for (const arg of arguments) {\n      switch (typeof arg) {\n        case 'object':\n          Object.keys(arg).forEach((key) => {\n            if (typeof arg[key] !== 'object') {\n              query[key] = arg[key]\n            }\n          })\n          break\n        case 'string':\n          query.path = arg\n          break\n        default:\n          throw new Error(`don't know how to handle ${typeof arg}`)\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/arch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "arch",
    "memberof": "lib/arch.js",
    "static": true,
    "longname": "lib/arch.js~arch",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/arch.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "todo": [
      "more reason for existence"
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "lib/cfg.js",
    "content": "/**\n * loads runtime configuration using the [config library](https://www.npmjs.com/package/config)\n * @name cfg\n * @public\n * @memberof pixeldeck\n */\n// eslint-disable-next-line no-unused-vars\nconst cfg = module.exports = require('config')\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/cfg.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "cfg",
    "memberof": "lib/cfg.js",
    "static": true,
    "longname": "lib/cfg.js~cfg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/cfg.js",
    "importStyle": null,
    "description": "loads runtime configuration using the [config library](https://www.npmjs.com/package/config)",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "lib/data/TileMaps.js",
    "content": "'use strict'\n\n/** @ignore */\nconst base = require('./base')\n/** @ignore */\nconst _Model = require('./_Model')\n\n/** @ignore */\nconst dbg = require('../dbg').extend('data:TileMaps')\n/**\n * Object Relational Model Root for `TileMaps` loki collection.\n *\n * @class TileMaps\n * @extends {_Model}\n */\nclass TileMaps extends _Model {\n  /** @type {number}  */\n  get height () { return this.record.height }\n  /** @type {boolean} */\n  get infinite () { return this.record.infinite }\n  /** @type {Array} */\n  get layers () { return this.record.layers }\n  /** @type {number}  */\n  get nextlayerid () { return this.record.nextlayerid }\n  /** @type {number}  */\n  get nextobjectid () { return this.record.nextobjectid }\n  /** @type {string}  */\n  get orientation () { return this.record.orientation }\n  /** @type {string} */\n  get renderorder () { return this.record.renderorder }\n  /** @type {number} */\n  get tiledversion () { return this.record.tiledversion }\n  /** @type {number} */\n  get tileheight () { return this.record.tileheight }\n  /** @type {Array<TileSet>} */\n  get tilesets () { return this.record.tilesets }\n  /** @type {number} */\n  get tilewidth () { return this.record.tilewidth }\n  /** @type {string} */\n  get type () { return this.record.type }\n  /** @type {string} */\n  get version () { return this.record.version }\n  /** @type {number} */\n  get width () { return this.record.width }\n  /** @type {string} */\n  get path () { return this.record.path }\n  /** @type {Object}\n   *  @todo document better\n   **/\n  get meta () { return this.record.meta }\n}\nTileMaps.collection = base.addCollection('TileMaps', {})\nmodule.exports = TileMaps\ndbg('loaded')\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/data/TileMaps.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "base",
    "memberof": "lib/data/TileMaps.js",
    "static": true,
    "longname": "lib/data/TileMaps.js~base",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileMaps.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "_Model",
    "memberof": "lib/data/TileMaps.js",
    "static": true,
    "longname": "lib/data/TileMaps.js~_Model",
    "access": "private",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileMaps.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/data/TileMaps.js",
    "static": true,
    "longname": "lib/data/TileMaps.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileMaps.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "class",
    "name": "TileMaps",
    "memberof": "lib/data/TileMaps.js",
    "static": true,
    "longname": "lib/data/TileMaps.js~TileMaps",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileMaps.js",
    "importStyle": null,
    "description": "Object Relational Model Root for `TileMaps` loki collection.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TileMaps"
      }
    ],
    "interface": false,
    "extends": [
      "_Model"
    ]
  },
  {
    "__docId__": 57,
    "kind": "get",
    "name": "height",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#height",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "get",
    "name": "infinite",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#infinite",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "get",
    "name": "layers",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#layers",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "get",
    "name": "nextlayerid",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#nextlayerid",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "get",
    "name": "nextobjectid",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#nextobjectid",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "get",
    "name": "orientation",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#orientation",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "get",
    "name": "renderorder",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#renderorder",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "get",
    "name": "tiledversion",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#tiledversion",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "get",
    "name": "tileheight",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#tileheight",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "tilesets",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#tilesets",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Array<TileSet>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "get",
    "name": "tilewidth",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#tilewidth",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "get",
    "name": "type",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#type",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "get",
    "name": "version",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#version",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "get",
    "name": "width",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#width",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "get",
    "name": "path",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#path",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "get",
    "name": "meta",
    "memberof": "lib/data/TileMaps.js~TileMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileMaps.js~TileMaps#meta",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "todo": [
      "document better"
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "lib/data/TileSets.js",
    "content": "'use strict'\n/** @ignore */\nconst dbg = require('../dbg').extend('Tileset')\n/** @ignore */\nconst data = require('./')\n/** @ignore */\nconst _Model = require('./_Model')\n/**\n * ORM 4 Tile Sets\n */\nclass TileSets extends _Model {\n  /** @type {number} */\n  get columns () { return this.record.columns }\n  /** @type {string} */\n  get image () { return this.record.image }\n  /** @type {number} */\n  get imageheight () { return this.record.imageheight }\n  /** @type {number} */\n  get imagewidth () { return this.record.imagewidth }\n  /** @type {number} */\n  get margin () { return this.record.margin }\n  /** @type {string} */\n  get name () { return this.record.name }\n  /** @type {number} */\n  get spacing () { return this.record.spacing }\n  /** @type {Array<Object>} */\n  get terrains () { return this.record.terrains }\n  /** @type {number} */\n  get tilecount () { return this.record.tilecount }\n  /** @type {number} */\n  get tileheight () { return this.record.tileheight }\n  /** @type {Array<Object>} */\n  get tiles () { return this.record.tiles }\n  /** @type {number} */\n  get tilewidth () { return this.record.tilewidth }\n  /** @type {string} */\n  get type () { return this.record.type }\n  /** @type {string} */\n  get version () { return this.record.version }\n}\n/**\n * @type {Loki.collection}\n */\nTileSets.collection = data.base.addCollection('tilesets', {\n  indices: ['path', 'hostPath'],\n  unique: ['path', 'hostPath']\n})\n\n/**\n * Give me something to load.\n * @param {*} json is pretty much just any kind of data.\n * @memberof data\n * /\n\n *\nTileSets.list = listTileSets\n\nTileSets.loadJson = loadJson\n\nTileSets.jsonPathFrom = jsonPathFrom\n\nTileSets.forPath = forPath\n\nfunction TileSets (json) {\n  const query = {}\n  Object.keys(json).forEach((key) => {\n    if (typeof json[key] !== 'object') {\n      query[key] = json[key]\n    }\n  })\n  const record = TileSets.collection.findOne(query) || TileSets.collection.insert(json)\n  let imageDataUrl;\n  const dbgg = dbg.extend(record.name)\n  const tileset = {\n    get record () { return record },\n    get columns () { return record.columns },\n    get image () { return record.image },\n    get imageheight () { return record.imageheight },\n    get imagewidth () { return record.imagewidth },\n    get margin () { return record.margin },\n    get name () { return record.name },\n    get spacing () { return record.spacing },\n    get terrains () { return record.terrains },\n    get tilecount () { return record.tilecount },\n    get tiledversion () { return record.tiledversion },\n    get tileheight () { return record.tileheight },\n    get tilewidth () { return record.tilewidth },\n    get tiles () { return record.tiles },\n    get tilewidth () { return record.tilewidth },\n    get type () { return record.type },\n    get version () { return record.version },\n    get imageHostPath () { return Path.join(Path.dirname(record.hostPath), record.image) },\n    get imageDataUrl () {\n\n      if (!record.imageDataUrl) {\n        dbgg('loading tileset image into data uri from %o', tileset.imageHostPath)\n        const datauri = require('datauri')\n        record.imageDataUrl = (new datauri(tileset.imageHostPath)).content\n        tileset.update()\n      } else {\n        dbgg('image data already loaded...')\n      }\n      return record.imageDataUrl\n    },\n    update(values={}){\n      Object.assign(record,values)\n      return TileSets.collection.update(record)\n    }\n  }\n  return tileset\n}\n\nconst Path = require('path')\nconst cfg = require('../cfg')\nconst Fs = require('fs')\nfunction resourcePathFrom (filepath) {\n  let localpath = filepath\n  while (Path.extname(localpath) != '') {\n    localpath = localpath.replace(Path.extname(localpath), '')\n  }\n  if (!localpath.startsWith(cfg.resDir)) localpath = Path.join(cfg.resDir, localpath)\n  return localpath\n}\n\nfunction jsonPathFrom (filepath) {\n  return resourcePathFrom(filepath) + '.json'\n}\n\nfunction loadJson (filepath) {\n  //TODO: Better way of handling extenctions// move away from .x.y.z\n  let hostPath = jsonPathFrom(filepath)\n  if (Fs.existsSync(hostPath)) {\n    const json = Fs.readFileSync(hostPath)\n    const data = JSON.parse(json)\n    return Object.assign({ hostPath }, data)\n  } else {\n    throw new Error(`No such json file: ${hostPath}`)\n  }\n}\n\nfunction forPath (filepath) {\n  const hostPath = jsonPathFrom(filepath)\n  dbg('getTilesetFrom %o = %o', filepath, hostPath)\n  let record = TileSets.collection.findOne({ hostPath: hostPath })\n  if (record) {\n    dbg('existing tileset located...')\n    return TileSets(record)\n  }\n  dbg('loading tileset data...')\n  const json = loadJson(hostPath)\n  dbg('saving tileset data...')\n  return TileSets(json)\n}\n\nfunction listTileSets () {\n  return TileSets.collection.find({}).map((item) => item.name)\n}\n*/\ndbg('loaded')\n\nmodule.exports = TileSets\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/data/TileSets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/data/TileSets.js",
    "static": true,
    "longname": "lib/data/TileSets.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileSets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "data",
    "memberof": "lib/data/TileSets.js",
    "static": true,
    "longname": "lib/data/TileSets.js~data",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileSets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "_Model",
    "memberof": "lib/data/TileSets.js",
    "static": true,
    "longname": "lib/data/TileSets.js~_Model",
    "access": "private",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileSets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "class",
    "name": "TileSets",
    "memberof": "lib/data/TileSets.js",
    "static": true,
    "longname": "lib/data/TileSets.js~TileSets",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/TileSets.js",
    "importStyle": null,
    "description": "ORM 4 Tile Sets",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "_Model"
    ]
  },
  {
    "__docId__": 78,
    "kind": "get",
    "name": "columns",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#columns",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "get",
    "name": "image",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#image",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "get",
    "name": "imageheight",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#imageheight",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "get",
    "name": "imagewidth",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#imagewidth",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "margin",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#margin",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "get",
    "name": "name",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#name",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "get",
    "name": "spacing",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#spacing",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "get",
    "name": "terrains",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#terrains",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "tilecount",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#tilecount",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "get",
    "name": "tileheight",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#tileheight",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "get",
    "name": "tiles",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#tiles",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "get",
    "name": "tilewidth",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#tilewidth",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "get",
    "name": "type",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#type",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "get",
    "name": "version",
    "memberof": "lib/data/TileSets.js~TileSets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/TileSets.js~TileSets#version",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "lib/data/_Model.js",
    "content": "\n/** @ignore */\nconst dbg = require('../dbg').extend('data')\n/** @ignore */\nconst arch = require('../arch')\n/**\n * Abstract model for extending\n * @returns {_Model}\n * @property {object} record\n * @property {debug} dbg\n */\nclass _Model {\n  /**\n   * Retrieves/Updates & Persists @param json\n   * @param {object} json to be used in query or\n\n   */\n  constructor (json) {\n    let record\n    if (!json.$loki) {\n      const query = arch.cleanQuery(json)\n      this.constructor.dbg('finding or creating by: %o', json)\n      record = this.collection.findOne(query) || this.collection.insert(json)\n    } else {\n      this.constructor.dbg('initializing new reference to: %o', json)\n      record = json\n    }\n    Object.defineProperties(this, {\n      record: { writable: false, enumerable: false, configurable: false, value: record },\n      dbg: { writable: false, enumerable: false, configurable: false, value: this.constructor.dbg.extend(`[${record.id}]`) }\n    })\n    this.dbg('loaded')\n  }\n\n  /**\n   * `json` will be passed to `cleanQuery` before being used to query.\n   *\n   * @param {object|string} json\n   * @return {_Model}\n   */\n  static find (json) {\n    const query = arch.cleanQuery(json)\n    this.dbg('find where: %o', json)\n    const record = this.collection.findOne(query)\n    if (record) {\n      this.dbg('found')\n      return new this(record)\n    } else {\n      this.dbg('not-found')\n      return false\n    }\n  }\n\n  /**\n   * Read a JSON resource file from a path, return the parsed JSON\n   * @param {*} path\n   * @return {Object} parsed JSON from file at path into object\n   * @throws {Error} if file doesn't exist\n   */\n  static readFromSync (path) {\n    const hostPath = arch.getResPathFor(path, '.json')\n    dbg('loadFromJsonFile', hostPath)\n    if (arch.Fs.existsSync(hostPath)) {\n      const json = arch.Fs.readFileSync(hostPath)\n\n      const data = JSON.parse(json)\n      return new this(Object.assign(data, { path }))\n    } else {\n      throw new Error(`No such json file: ${hostPath}`)\n    }\n  }\n\n  /**\n   * Either find an existing record for this path;\n   * Or load and create a record from data at this path\n   * @param {*} path\n   * @return {_Model}\n   */\n  static findOrLoad (path) {\n    this.dbg('findOrLoad', path)\n    let rec = this.find(path)\n    if (!rec) rec = this.readFromSync(path)\n    return rec\n  }\n\n  /**\n   * get a the classes output handle.\n   */\n  static get dbg () {\n    return dbg.extend(this.name)\n  }\n\n  /**\n   * Defaults to the collection defined on the constructor\n   * @returns {Loki} collection\n   */\n  get collection () {\n    return this.constructor.collection\n  }\n\n  /**\n   *\n   */\n  // --- INSTANCE METHODS:\n  /**\n   * persist this record to the loki database.\n   */\n  save () {\n    /**\n     * @property {object} record\n     */\n    this.record = this.collection.update(this.record)\n  }\n}\n\nmodule.exports = _Model\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/data/_Model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/data/_Model.js",
    "static": true,
    "longname": "lib/data/_Model.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/_Model.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "arch",
    "memberof": "lib/data/_Model.js",
    "static": true,
    "longname": "lib/data/_Model.js~arch",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/_Model.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "class",
    "name": "_Model",
    "memberof": "lib/data/_Model.js",
    "static": true,
    "longname": "lib/data/_Model.js~_Model",
    "access": "private",
    "export": false,
    "importPath": "pixeldeck/lib/data/_Model.js",
    "importStyle": null,
    "description": "Abstract model for extending",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{_Model}"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "record",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "debug"
        ],
        "spread": false,
        "optional": false,
        "name": "dbg",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "_Model"
      ],
      "spread": false,
      "description": ""
    },
    "interface": false
  },
  {
    "__docId__": 96,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/data/_Model.js~_Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/_Model.js~_Model#constructor",
    "access": "public",
    "description": "Retrieves/Updates & Persists @param json",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "to be used in query or"
      }
    ]
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "find",
    "memberof": "lib/data/_Model.js~_Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/data/_Model.js~_Model.find",
    "access": "public",
    "description": "`json` will be passed to `cleanQuery` before being used to query.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "_Model"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "readFromSync",
    "memberof": "lib/data/_Model.js~_Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/data/_Model.js~_Model.readFromSync",
    "access": "public",
    "description": "Read a JSON resource file from a path, return the parsed JSON",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "parsed JSON from file at path into object"
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if file doesn't exist"
      }
    ]
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "findOrLoad",
    "memberof": "lib/data/_Model.js~_Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/data/_Model.js~_Model.findOrLoad",
    "access": "public",
    "description": "Either find an existing record for this path;\nOr load and create a record from data at this path",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "_Model"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "get",
    "name": "dbg",
    "memberof": "lib/data/_Model.js~_Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/data/_Model.js~_Model.dbg",
    "access": "public",
    "description": "get a the classes output handle.",
    "lineNumber": 89,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "get",
    "name": "collection",
    "memberof": "lib/data/_Model.js~_Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/_Model.js~_Model#collection",
    "access": "public",
    "description": "Defaults to the collection defined on the constructor",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Loki} collection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Loki"
      ],
      "spread": false,
      "description": "collection"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "save",
    "memberof": "lib/data/_Model.js~_Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/data/_Model.js~_Model#save",
    "access": "public",
    "description": "persist this record to the loki database.",
    "lineNumber": 108,
    "params": [],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "record",
    "memberof": "lib/data/_Model.js~_Model",
    "static": false,
    "longname": "lib/data/_Model.js~_Model#record",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "properties": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "record",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "lib/data/base.js",
    "content": "/**\n * @fileOverview lokijs database instance\n * @requires ../cfg,../evt,../dbg\n */\n\n/**\n * https://github.com/techfort/LokiJS\n */\nconst LokiJs = require('lokijs')\n/** @ignore */\n// const LokiJsFsStructuredAdapter = require('lokijs/src/loki-fs-structured-adapter')\n/** @ignore */\n// const lfsAdapter = new LokiJsFsStructuredAdapter()\n/** @ignore */\nconst cfg = require('../cfg')\n/** @ignore */\nconst evt = require('../evt')\n/** @ignore */\nconst dbg = require('../dbg').extend('data:base')\n/**\n * this object contains a promise and associated callback handlers\n * @todo Review this solution for `promise-ify-ing`\n */\nconst load = newLoadPromise()\n/**\n * instance of a [loki.js](https://github.com/techfort/LokiJS) embedded database instance\n */\nconst base = module.exports = new LokiJs(cfg.dbName, Object.assign({\n  persistenceMethod: 'fs',\n  autoloadCallback: load.onAutoload,\n  autosaveCallback: load.onAutosave\n}, cfg.dbOpts))\n\nbase.loaded = load.promise\n\nbase.on('close', () => {\n  dbg('Database closed, deleting this module from cache:', __filename)\n  delete require.cache[__filename]\n})\n/**\n *\n */\nasync function newLoadPromise () {\n  const load = { finished: false }\n  load.promise = new Promise(function (resolve, reject) {\n    /**\n     * @emit Loaded\n     */\n    function onAutoload () {\n      if (load.finished) { throw new Error('WTF?') }\n      evt.emit('Loaded')\n      dbg('onAutoload', ...arguments)\n      load.finished = true\n      resolve()\n    }\n    load.onAutoload = onAutoload\n    /**\n     * @emits Saved\n     */\n    function onAutosave () {\n      if (load.finished) { throw new Error('WTF? already finished?') }\n      evt.emit('Saved')\n      dbg('onAutosave', ...arguments)\n      load.finished = true\n      resolve()\n    }\n    load.onAutosave = onAutosave\n  })\n  return load\n}\n\ndbg('loading...')\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/data/base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "LokiJs",
    "memberof": "lib/data/base.js",
    "static": true,
    "longname": "lib/data/base.js~LokiJs",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/base.js",
    "importStyle": null,
    "description": "https://github.com/techfort/LokiJS",
    "lineNumber": 9,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "cfg",
    "memberof": "lib/data/base.js",
    "static": true,
    "longname": "lib/data/base.js~cfg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "evt",
    "memberof": "lib/data/base.js",
    "static": true,
    "longname": "lib/data/base.js~evt",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/data/base.js",
    "static": true,
    "longname": "lib/data/base.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "load",
    "memberof": "lib/data/base.js",
    "static": true,
    "longname": "lib/data/base.js~load",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/base.js",
    "importStyle": null,
    "description": "this object contains a promise and associated callback handlers",
    "lineNumber": 24,
    "todo": [
      "Review this solution for `promise-ify-ing`"
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "base",
    "memberof": "lib/data/base.js",
    "static": true,
    "longname": "lib/data/base.js~base",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/base.js",
    "importStyle": null,
    "description": "instance of a [loki.js](https://github.com/techfort/LokiJS) embedded database instance",
    "lineNumber": 28,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "newLoadPromise",
    "memberof": "lib/data/base.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/data/base.js~newLoadPromise",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/base.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 43,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "lib/data/index.js",
    "content": "/**\n * another handy-dandy index\n * @type {{base:Loki,TileMaps:TileMaps,TileSets:TileSets}}\n */\n// eslint-disable-next-line no-unused-vars\nconst data = Object.defineProperties(module.exports, {\n  base: { get: () => require('./base') },\n  TileMaps: { get: () => require('./TileMaps') },\n  TileSets: { get: () => require('./TileSets') }\n})\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/data/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "data",
    "memberof": "lib/data/index.js",
    "static": true,
    "longname": "lib/data/index.js~data",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/data/index.js",
    "importStyle": null,
    "description": "another handy-dandy index",
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "{base:Loki,TileMaps:TileMaps,TileSets:TileSets}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "lib/dbg.js",
    "content": "/**\n * [debug](https://www.npmjs.com/package/debug) provides our output\n * @memberof pixeldeck\n * @private\n */\n// eslint-disable-next-line no-unused-vars\nconst dbg = module.exports = require('debug')(require('../package.json').name)\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/dbg.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/dbg.js",
    "static": true,
    "longname": "lib/dbg.js~dbg",
    "access": "private",
    "export": false,
    "importPath": "pixeldeck/lib/dbg.js",
    "importStyle": null,
    "description": "[debug](https://www.npmjs.com/package/debug) provides our output",
    "lineNumber": 7,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "lib/evt/Restart.js",
    "content": "module.exports = Restart\n/** @ignore */\nconst dbg = require('../dbg').extend('Reset()')\n/**\n * Restart\n * @fires Restarting\n * @fires Restarted\n */\nasync function Restart () {\n  const evt = require('../evt')\n  evt.emit('Restarting')\n  dbg('Restarting...')\n  await require('./Stop')()\n  const moduleDir = require('path').resolve(__dirname, '../../')\n\n  require('.').emit('Resetting')\n  Object.keys(require.cache).forEach((key) => {\n    if (key.startsWith(moduleDir)) {\n      delete require.cache[key]\n    }\n  })\n  await require('./Start')()\n  evt.emit('Restarted')\n  dbg('Restarted')\n}\ndbg('loaded')\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/evt/Restart.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/evt/Restart.js",
    "static": true,
    "longname": "lib/evt/Restart.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/Restart.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "Restart",
    "memberof": "lib/evt/Restart.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/evt/Restart.js~Restart",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/Restart.js",
    "importStyle": null,
    "description": "Restart",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@fires",
        "tagValue": "Restarting"
      },
      {
        "tagName": "@fires",
        "tagValue": "Restarted"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "lib/evt/Start.js",
    "content": "/** @ignore */\nconst dbg = require('../dbg').extend('Start')\nmodule.exports = Start\n/**\n * Start the service, meaning:\n * 0) Open databases\n * 1) Open Http services.\n * @fires Starting\n * @fires Started\n */\nasync function Start () {\n  const evt = require('../evt')\n  evt.emit('Starting')\n  const dbg = require('../dbg').extend('Start')\n  const cfg = require('../cfg')\n  const server = require('../server')\n  await server.listen(cfg.server.port, cfg.server.address)\n  dbg('listening', server.address())\n  if (cfg.interactive) {\n    const repl = require('../../ARCHIVES/repl')\n    repl()\n    require('../arch').defineRequires(require('path').resolve(__dirname, '..'), repl.server.context, 'arch', 'data', 'service', 'cfg', 'repl', 'server')\n  }\n  evt.emit('Start')\n}\ndbg('loaded')\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/evt/Start.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/evt/Start.js",
    "static": true,
    "longname": "lib/evt/Start.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/Start.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "Start",
    "memberof": "lib/evt/Start.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/evt/Start.js~Start",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/Start.js",
    "importStyle": null,
    "description": "Start the service, meaning:\n0) Open databases\n1) Open Http services.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@fires",
        "tagValue": "Starting"
      },
      {
        "tagName": "@fires",
        "tagValue": "Started"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "lib/evt/Stop.js",
    "content": "module.exports = Stop\n/**\n * @emits Stopping\n * @fires Stopped\n */\nasync function Stop () {\n  const evt = require('../evt')\n  const dbg = require('../dbg').extend('Stop()')\n  evt.emit('Stopping')\n  return Promise.resolve().finally(() => {\n    return require('../server').close((err) => {\n      if (err) { dbg('server close error: %o', err) } else { dbg('server closed') }\n    })\n  }).finally(() => {\n    dbg('db stopping')\n    require('../data/base').close(function () {\n      dbg('db stopped')\n    })\n  }).finally(() => {\n    dbg('repl stopping')\n    require('../../ARCHIVES/repl').close(function () {\n      dbg('repl stopped')\n    })\n  }).finally(() => {\n    evt.emit('Stopped')\n  })\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/evt/Stop.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "Stop",
    "memberof": "lib/evt/Stop.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/evt/Stop.js~Stop",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/Stop.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@fires",
        "tagValue": "Stopped"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "Stopping"
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "lib/evt/index.js",
    "content": "/** @ignore */\nconst dbg = require('../dbg').extend('evt')\n/** @ignore */\nconst events = require('events')\n/**\n * [EventEmitter offical documentation](https://nodejs.org/docs/latest-v10.x/api/events.html#events_class_eventemitter)\n */\nconst EventEmitter = events.EventEmitter\n/**\n * testing\n * @extends {EventEmitter}\n */\nclass EvtHub extends EventEmitter {\n  /**\n   * Make one\n   */\n  constructor () {\n    super(...arguments)\n    this.on('Loaded', () => dbg('Loaded'))\n    this.on('Started', () => dbg('Start'))\n    this.on('Starting', () => dbg('Starting'))\n    this.on('Restarting', () => dbg('Restarting'))\n    this.on('Restarted', () => dbg('Restart'))\n    this.on('Stopping', () => dbg('Stopping'))\n    this.on('Stopped', () => dbg('Stop'))\n  }\n\n  /** @ignore */\n  get Start () { return require('./Start') }\n  /** @ignore */\n  get Restart () { return require('./Restart') }\n  /** @ignore */\n  get Stop () { return require('./Stop') }\n}\n/**\n * @type {EvtHub}\n * instance of event hub\n */\n// eslint-disable-next-line no-unused-vars\nconst evt = module.exports = new EvtHub()\ndbg('loaded')\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/evt/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/evt/index.js",
    "static": true,
    "longname": "lib/evt/index.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "events",
    "memberof": "lib/evt/index.js",
    "static": true,
    "longname": "lib/evt/index.js~events",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "lib/evt/index.js",
    "static": true,
    "longname": "lib/evt/index.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/index.js",
    "importStyle": null,
    "description": "[EventEmitter offical documentation](https://nodejs.org/docs/latest-v10.x/api/events.html#events_class_eventemitter)",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "EvtHub",
    "memberof": "lib/evt/index.js",
    "static": true,
    "longname": "lib/evt/index.js~EvtHub",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/index.js",
    "importStyle": null,
    "description": "testing",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/evt/index.js~EvtHub",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/evt/index.js~EvtHub#constructor",
    "access": "public",
    "description": "Make one",
    "lineNumber": 17
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "Start",
    "memberof": "lib/evt/index.js~EvtHub",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/evt/index.js~EvtHub#Start",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "Restart",
    "memberof": "lib/evt/index.js~EvtHub",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/evt/index.js~EvtHub#Restart",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "get",
    "name": "Stop",
    "memberof": "lib/evt/index.js~EvtHub",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/evt/index.js~EvtHub#Stop",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "evt",
    "memberof": "lib/evt/index.js",
    "static": true,
    "longname": "lib/evt/index.js~evt",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/evt/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "EvtHub"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "lib/index.js",
    "content": "/**\n\n * Pixeldeck library\n * @name pixeldeck\n * @public\n * @type {{service:service,cfg:cfg,data:data,dbg:dbg,evt:evt,repl:repl,server:server}}\n * ``\n */\n// eslint-disable-next-line no-unused-vars\nconst pixeldeck = module.exports = {\n  get service () { return require('./service') },\n  // direct app link?\n  get cfg () {\n    return require('./cfg')\n  },\n  get data () {\n    return require('./data')\n  },\n  get dbg () {\n    return require('./dbg')\n  },\n  get evt () {\n    return require('./evt')\n  },\n  get repl () {\n    return require('./UI/repl')\n  },\n  get server () {\n    return require('./server')\n  }\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "pixeldeck",
    "memberof": "lib/index.js",
    "static": true,
    "longname": "lib/index.js~pixeldeck",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck",
    "importStyle": null,
    "description": "\nPixeldeck library",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "{service:service,cfg:cfg,data:data,dbg:dbg,evt:evt,repl:repl,server:server}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "lib/server.js",
    "content": "/**\n * @name server\n * @desc [Node.js http.Server](https://nodejs.org/docs/latest-v10.x/api/http.html#http_class_http_server) instance for our [indexed express application](./index.js.html).\n */\n// eslint-disable-next-line no-unused-vars\nconst server = module.exports = require('http').createServer(require('./service'))\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "server",
    "memberof": "lib/server.js",
    "static": true,
    "longname": "lib/server.js~server",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/server.js",
    "importStyle": null,
    "description": "[Node.js http.Server](https://nodejs.org/docs/latest-v10.x/api/http.html#http_class_http_server) instance for our [indexed express application](./index.js.html).",
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "lib/service/app.js",
    "content": "/**\n * http://expressjs.com/en/4x/api.html\n */\nconst Express = require('express')\n// TODO: Express App settings?\n/**\n * @desc\n *    pixeldeck uses [express.js v4](http://expressjs.com/en/4x/api.html) as the remote holoemition router.\n * @type {Express}\n */\nconst app = module.exports = Express()\n/** @ignore */\nconst cfg = require('../cfg')\napp.set('view engine', 'pug')\napp.set('views', cfg.viewsDir)\nObject.assign(app.locals, cfg.locals)\napp.locals.dbg = require('../dbg').extend('VIEW')\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/service/app.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "Express",
    "memberof": "lib/service/app.js",
    "static": true,
    "longname": "lib/service/app.js~Express",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/app.js",
    "importStyle": null,
    "description": "http://expressjs.com/en/4x/api.html",
    "lineNumber": 4,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "app",
    "memberof": "lib/service/app.js",
    "static": true,
    "longname": "lib/service/app.js~app",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/app.js",
    "importStyle": null,
    "description": "   pixeldeck uses [express.js v4](http://expressjs.com/en/4x/api.html) as the remote holoemition router.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Express"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "cfg",
    "memberof": "lib/service/app.js",
    "static": true,
    "longname": "lib/service/app.js~cfg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "lib/service/getRoot.js",
    "content": "module.exports = getRoot\n/**\n *\n * @param {*} req\n * @param {*} res\n */\nfunction getRoot (req, res) {\n  res.render('main')\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/service/getRoot.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "getRoot",
    "memberof": "lib/service/getRoot.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/service/getRoot.js~getRoot",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getRoot.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "lib/service/getTileMapHtml.js",
    "content": "module.exports = [/\\/(.*)\\.tm\\.html/, getTileMapHtml]\n/** @ignore */\nconst dbg = require('../dbg').extend('getTileMapHtml')\n/** @ignore */\nconst TileMaps = require('../data/TileMaps')\n/**\n *\n * @param {request} req\n * @param {response} res\n * @param {next} next\n */\nfunction getTileMapHtml (req, res, next) {\n  res.locals.tileMap = TileMaps.findOrLoad(req.path)\n  dbg('getTileMapHtml', !!res.locals.tileMap)\n  return res.render('tileMap/html')\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/service/getTileMapHtml.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/service/getTileMapHtml.js",
    "static": true,
    "longname": "lib/service/getTileMapHtml.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileMapHtml.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "TileMaps",
    "memberof": "lib/service/getTileMapHtml.js",
    "static": true,
    "longname": "lib/service/getTileMapHtml.js~TileMaps",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileMapHtml.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "getTileMapHtml",
    "memberof": "lib/service/getTileMapHtml.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/service/getTileMapHtml.js~getTileMapHtml",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileMapHtml.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "response"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "next"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "lib/service/getTileMapSvg.js",
    "content": "module.exports = getTileMapSvg\n/** @ignore */\nconst dbg = require('../dbg').extend('getTileMapSvg')\n/**\n * Route handler for `tm.svg` files.\n * @param {*} req\n * @param {*} res\n * @param {*} next\n */\nfunction getTileMapSvg (req, res, next) {\n  dbg('get tileMap', req.path)\n\n  const TileMaps = require('../data/TileMaps')\n  let tileMap = TileMaps.find({ path: req.path })\n  dbg('lookup:', tileMap)\n  if (!tileMap) {\n    dbg('loading from json...')\n    tileMap = TileMaps.readFromSync(req.path)\n    dbg('json:%O', tileMap)\n  } else {\n    dbg('lookup success')\n  }\n  res.locals.tileMap = tileMap\n  res.locals.doctype = 'svg'\n  res.locals.pretty = true\n  res.type('svg')\n  res.render('tileMap/svg')\n  dbg('%o rendered', req.path)\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/service/getTileMapSvg.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/service/getTileMapSvg.js",
    "static": true,
    "longname": "lib/service/getTileMapSvg.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileMapSvg.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "getTileMapSvg",
    "memberof": "lib/service/getTileMapSvg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/service/getTileMapSvg.js~getTileMapSvg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileMapSvg.js",
    "importStyle": null,
    "description": "Route handler for `tm.svg` files.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "lib/service/getTileSetSvg.js",
    "content": "module.exports = getTileSetSvg\n/** @ignore */\nconst dbg = require('../dbg').extend('getTileSetSvg')\n/** @ignore */\nconst TileSets = require('../data/TileSets')\n\n/**\n *\n * @param {*} req\n * @param {*} res\n * @param {*} next\n */\nfunction getTileSetSvg (req, res, next) {\n  dbg('rendering %o...', req.path)\n  const tileSet = res.locals.tileSet = TileSets.findOrLoad(req.path)\n  dbg('tileSet', !!tileSet)\n  res.locals.doctype = 'svg'\n  res.locals.pretty = true\n  res.type('svg')\n  res.render('tileSet/svg')\n\n  dbg('%o rendered.', req.path)\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/service/getTileSetSvg.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/service/getTileSetSvg.js",
    "static": true,
    "longname": "lib/service/getTileSetSvg.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileSetSvg.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "TileSets",
    "memberof": "lib/service/getTileSetSvg.js",
    "static": true,
    "longname": "lib/service/getTileSetSvg.js~TileSets",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileSetSvg.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "getTileSetSvg",
    "memberof": "lib/service/getTileSetSvg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/service/getTileSetSvg.js~getTileSetSvg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/getTileSetSvg.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "lib/service/index.js",
    "content": "\n/**\n * map [app](#app) handlers to routes\n * @alias service\n * @type {app}\n */\nconst index = module.exports = require('./app')\nindex.get(/\\/(.*)\\.ts\\.svg/, require('./getTileSetSvg'))\nindex.get(/\\/(.*)\\.tm\\.svg/, require('./getTileMapSvg'))\nindex.get(...require('./getTileMapHtml'))\nindex.get('/', require('./getRoot'))\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/service/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "index",
    "memberof": "lib/service/index.js",
    "static": true,
    "longname": "lib/service/index.js~index",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/service/index.js",
    "importStyle": null,
    "description": "map [app](#app) handlers to routes",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "service"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "app"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "lib/ui/Start.js",
    "content": "module.exports = Start\n/**\n * https://nodejs.org/docs/latest-v10.x/api/repl.html\n * @private\n */\nconst Repl = require('repl')\n/** @ignore */\nconst dbg = require('../dbg').extend('ui:Start')\n/** @ignore */\nconst evt = require('../evt')\n/**\n * Start the user interface\n * @emits {evt} uiStarting\n * @emits {evt} uiStarted\n * @todo Debug more events\n */\nasync function Start (opts = {}) {\n  const cfg = require('../cfg')\n  if (!cfg.interactive) {\n    dbg('User Interface Disabled')\n    return Promise.resolve(null)\n  }\n  const ui = require('.')\n  if (!ui.REPLServer && ui.starting) {\n    dbg('User Interface Already Starting...')\n  } else {\n    evt.emit('uiStarting')\n    dbg('Promising to start user interface...')\n    ui.starting = new Promise(function (resolve, reject) {\n      const finalReplOpts = Object.assign({}, opts, cfg.replOpts)\n      dbg('starting repl(%o)', finalReplOpts)\n      ui.REPLServer = Repl.start(finalReplOpts)\n      ui.REPLServer.once('close', function () {\n        dbg('on REPLServer close, closing pixeldeck too')\n        require('../evt/Stop')()\n      })\n      evt.emit('uiStarted')\n      return resolve(ui)\n    })\n  }\n  return ui.starting\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/ui/Start.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "Repl",
    "memberof": "lib/ui/Start.js",
    "static": true,
    "longname": "lib/ui/Start.js~Repl",
    "access": "private",
    "export": false,
    "importPath": "pixeldeck/lib/ui/Start.js",
    "importStyle": null,
    "description": "https://nodejs.org/docs/latest-v10.x/api/repl.html",
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/ui/Start.js",
    "static": true,
    "longname": "lib/ui/Start.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/ui/Start.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "evt",
    "memberof": "lib/ui/Start.js",
    "static": true,
    "longname": "lib/ui/Start.js~evt",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/ui/Start.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "Start",
    "memberof": "lib/ui/Start.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/ui/Start.js~Start",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/ui/Start.js",
    "importStyle": null,
    "description": "Start the user interface",
    "lineNumber": 17,
    "todo": [
      "Debug more events"
    ],
    "emits": [
      {
        "types": [
          "evt"
        ],
        "description": "uiStarting"
      },
      {
        "types": [
          "evt"
        ],
        "description": "uiStarted"
      }
    ],
    "params": [
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "lib/ui/Stop.js",
    "content": "module.exports = Stop\n/** @ignore */\nconst dbg = require('../dbg').extend('ui:Stop')\n/** @ignore */\nconst evt = require('../evt')\n/**\n * Stop REPLServer\n * @emits {evt} uiStopping\n * @emits {evt} uiStopped\n */\nasync function Stop () {\n  const ui = require('./')\n  if (!ui.starting) {\n    dbg('ui has not yet been started')\n    return false\n  }\n  evt.emit('uiStopping')\n  dbg('repl close requested, clearing reissue prompt timeout', ui.timeoutId)\n  clearTimeout(ui.timeoutId)\n  dbg('commanding repl server close')\n  const server = (await ui.starting).REPLServer\n  server.close()\n  return true\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/ui/Stop.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "variable",
    "name": "dbg",
    "memberof": "lib/ui/Stop.js",
    "static": true,
    "longname": "lib/ui/Stop.js~dbg",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/ui/Stop.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "evt",
    "memberof": "lib/ui/Stop.js",
    "static": true,
    "longname": "lib/ui/Stop.js~evt",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/ui/Stop.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "Stop",
    "memberof": "lib/ui/Stop.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/ui/Stop.js~Stop",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/ui/Stop.js",
    "importStyle": null,
    "description": "Stop REPLServer",
    "lineNumber": 11,
    "emits": [
      {
        "types": [
          "evt"
        ],
        "description": "uiStopping"
      },
      {
        "types": [
          "evt"
        ],
        "description": "uiStopped"
      }
    ],
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "lib/ui/index.js",
    "content": "/**\n * repl module\n * @type {function}\n\n */\n// eslint-disable-next-line no-unused-vars\nconst repl = module.exports = {\n  get Start () { return require('./Start') },\n  get Stop () { return require('./Stop') }\n}\n",
    "static": true,
    "longname": "/home/badquanta/Projects/pixeldeck/lib/ui/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "repl",
    "memberof": "lib/ui/index.js",
    "static": true,
    "longname": "lib/ui/index.js~repl",
    "access": "public",
    "export": false,
    "importPath": "pixeldeck/lib/ui/index.js",
    "importStyle": null,
    "description": "repl module",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "index",
    "content": "<a name=\"top\">PixelDeck links:</a>\n\n[home](https://BadQuanta.github.io/pixeldeck/) |\n[github](https://github.com/BadQuanta/pixeldeck/) |\n[APIv0.0.1](https://badquanta.github.io/pixeldeck/pixeldeck/0.0.1/index.html) |\n[coverage](https://badquanta.github.io/pixeldeck/coverage/index.html)\n ...\n\n---\n\n### About:\n\nA work-in-progress environment for 2d games.  Lots of goals.\n\n[![Screenshot](https://badquanta.github.io/pixeldeck/imgs/Screenshot01.thumbnail.png \"Screenshot\" )](https://badquanta.github.io/pixeldeck/imgs/Screenshot01.png)\n\n---\n\n### License:\n\nThe license is the G.N.U. G.P.L. for everything within the [repository](https://github.com/BadQuanta/pixeldeck) this [README](./README.md) and/or [LICENSE](./LICENSE.md) were found.\n\n---\n\n### Credits:\n\n\n\nIn general order of addition to repository.  Please [create a new issue](https://github.com/badquanta/pixeldeck/issues/new) if there is a missing credit and/or something is incorrect or incomplete.\n\n---\n\n### TileSets:\n\n###### Sources:\n\n* From [bluecarrot16]() [lpc-terrains](https://opengameart.org/content/lpc-terrains)\n\n---\n\n###### characters\n\n* TODO:\n  * [ ] cat\n  * [ ] dog\n  * [ ] rat\n  * [ ] bird\n  * [ ] tree\n  * [ ] grass/flower/tree?\n\n---\n\n###### objects\n\n* [ ] TODO: Objects\n* [ ] ground/floor/bridge/etc...\n* [ ] walls/doors/windows\n* [ ] NPC\n  * [ ] Server NPCs\n  * [ ] Client NPCs\n* [ ] Players\n  * [ ] Multi player w/ Server\n  * [ ] Single player\n    * [ ] with Server\n    * [ ] without Server\n\n\n---\n\n###### javascript libraries:\n\nthere are really so many, so check out [package.json](./package.json) if you really want to see just the top level dependencies.  Here are the top 10 highlights (so var...)\n\n  1) [express](http://expressjs.com/en/4x/api.html) used for server http server to javascript api handling\n  2) [lokijs](https://github.com/techfort/LokiJS) I'm using this to provide an `isomorphic database` that will run identically on the client & the server. It also should support synchronizing changes between the client & server. This concept has yet to be prototyped.\n  3) [#TODO mocha](https://mochajs.org/), along with libraries like [#TODO supertest](#TODO), [#TODO chai](#TODO), [#TODO approvals](#TODO) and others\n  4) [pug](https://pugjs.org/) is an excellent tool for XML generation, and utilized her for `SVG` and `HTML` templates.\n  5) [#TODO socket.io](https://socket.io/) Not yet really utilized; but intended to be the backbone of `loki database` synchronization.\n  6) [jsdoc](https://jsdoc.app/) generates our excellent documentation.\n  7) [nodemon](#TODO) TODO:\n  9) [nyc](#TODO) TODO:\n  10) [config](#TODO) TODO:\n\n---\n\n<a name=\"TODO\">&nbsp;</a>\n\n###### TODOs\n\n\n\nthings I need to get done:\n\n* [x] a lot...\n* [ ] give due credit\n* [ ] pacjage.json [config](https://docs.npmjs.com/misc/config)\n* [ ] rewview package.json [scripts](https://docs.npmjs.com/misc/scripts)\n  1) `prepublish:` _generate docs?_\n  2) `prepare:` something\n  1) __(publish)__\n      `prepublishOnly`: Run BEFORE the package is prepared and packed, ONLY on publish. (See below.)\n  1) __(pack| publish)__\n      1) `prepack`: run BEFORE a tarball is packed when installing git dependencies\n      2) `postpack:` Run AFTER the tarball has been generated and moved to its final destination.\n  1) __publish__\n      1) `publish, postpublish:` Run AFTER the package is published.\n  1) __install__ `preinstall:` Run BEFORE the package is installed\ninstall, postinstall: Run AFTER the package is installed.\n  1) __install__ `preuninstall, uninstall:` Run BEFORE the package is uninstalled.\n  1) postuninstall: Run AFTER the package is uninstalled.\n  1) preversion: Run BEFORE bumping the package version.\n  1) version: Run AFTER bumping the package version, but BEFORE commit.\n  1) postversion: Run AFTER bumping the package version, and AFTER commit.\npretest, test, posttest: Run by the npm test command.\nprestop, stop, poststop: Run by the npm stop command.\nprestart, start, poststart: Run by the npm start command.\nprerestart, restart, postrestart: Run by the npm restart command. Note: npm restart will run the stop and start scripts if no restart script is provided.\npreshrinkwrap, shrinkwrap, postshrinkwrap: Run by the npm shrinkwrap command.\n\n* [ ] version 0.0.1\n\nback to [#top](#top)?",
    "longname": "/home/badquanta/Projects/pixeldeck/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"pixeldeck\",\n  \"version\": \"0.0.1\",\n  \"main\": \"lib/index.js\",\n  \"description\": \"A 2d virtual environment\",\n  \"homepage\": \"https://badquanta.github.io/pixeldeck/\",\n  \"bugs\": {\n    \"url\": \"https://github.com/badquanta/pixeldeck/labels/bug\"\n  },\n  \"keywords\": [\n    \"multiplayer\",\n    \"game-engine\",\n    \"2d\",\n    \"web-browser\",\n    \"web-service\"\n  ],\n  \"directories\": {\n    \"lib\": \"lib/\",\n    \"bin\": \"bin/\",\n    \"man\": \"man/\",\n    \"doc\": \"docs/\",\n    \"test\": \"test/\",\n    \"res\": \"res/\",\n    \"config\": \"config/\"\n  },\n  \"files\": [\n    \"README.md\",\n    \"LICENSE.md\",\n    \"package.json\"\n  ],\n  \"bin\": {\n    \"pixeldeck\": \"./bin/pixeldeck.js\"\n  },\n  \"man\": [\n    \"man/pixeldeck.1\"\n  ],\n  \"scripts\": {\n    \"test\": \"DEBUG=pixeldeck* mocha\",\n    \"diagnostics\": \"nodemon --exec npm -- run test\",\n    \"start\": \"DEBUG=\\\"*\\\" bin/pixeldeck.js\",\n    \"start-watch\": \"DEBUG='*' nodemon --exec npm start\",\n    \"docs\": \"npm run esdoc && npm run jsdoc && npm run doc-man && npm run cover\",\n    \"cover\": \"npx nyc mocha | tee ./docs/COVERAGE.TXT\",\n    \"esdoc\": \"./node_modules/.bin/esdoc\",\n    \"jsdoc\": \"./node_modules/.bin/jsdoc -c ./jsdoc.conf.json\",\n    \"doc-man\": \"./scripts/updateMan.js ./docs/pixeldeck.md\",\n    \"developer\": \"DEBUG='pixeldeck*,$DEBUG' nodemon --exec npm run docs\"\n  },\n  \"os\": [\n    \"linux\",\n    \"!win32\",\n    \"!win64\",\n    \"!darwin\"\n  ],\n  \"author\": \"BadQuanta\",\n  \"license\": \"GPL-3.0\",\n  \"nodemonConfig\": {\n    \"verbose\": true,\n    \"watch\": [\n      \"*\"\n    ],\n    \"ignore\": [\n      \"*.db.json\",\n      \"docs/*\",\n      \"man/*\"\n    ],\n    \"ext\": \"js,md,json\",\n    \"delay\": \"1000\"\n  },\n  \"dependencies\": {\n    \"blessed\": \"^0.1.81\",\n    \"chai\": \"^4.2.0\",\n    \"config\": \"^3.2.3\",\n    \"datauri\": \"^2.0.0\",\n    \"debug\": \"^4.1.1\",\n    \"express\": \"^4.17.1\",\n    \"jstransformer-markdown-it\": \"^2.1.0\",\n    \"lokijs\": \"^1.5.7\",\n    \"mocha\": \"^6.2.1\",\n    \"pug\": \"^2.0.4\",\n    \"socket.io\": \"^2.3.0\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^6.5.1\",\n    \"eslint-config-standard\": \"^14.1.0\",\n    \"eslint-plugin-import\": \"^2.18.2\",\n    \"eslint-plugin-node\": \"^10.0.0\",\n    \"eslint-plugin-promise\": \"^4.2.1\",\n    \"eslint-plugin-standard\": \"^4.0.1\",\n    \"jsdoc\": \"^3.6.3\",\n    \"nodemon\": \"^1.19.3\",\n    \"nyc\": \"^14.1.1\",\n    \"remark-man\": \"^6.0.0\",\n    \"remark-parse\": \"^7.0.1\",\n    \"should\": \"^13.2.3\",\n    \"supertest\": \"^4.0.2\",\n    \"to-vfile\": \"^6.0.0\",\n    \"unified\": \"^8.4.1\"\n  }\n}\n",
    "longname": "/home/badquanta/Projects/pixeldeck/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/badquanta/Projects/pixeldeck/docs/README.md",
    "name": "./docs/README.md",
    "content": "<a name=\"top\">PixelDeck links:</a>\n\n[home](https://BadQuanta.github.io/pixeldeck/),\n[github](https://github.com/BadQuanta/pixeldeck/),\n[APIv0.0.1](https://badquanta.github.io/pixeldeck/pixeldeck/0.0.1/index.html),\n ...\n\n### API Documentation:\n* [0.0.1](./pixeldeck/0.0.1/index.html)\n\n## Developer's Blog\n\nI'll try to share current struggles and progress below:\n\n## Monday September 30th, @02:25pm U.S.A./PST\nThis started with making [Tiled](https://www.mapeditor.org/) tilesets & tilemaps, and using Node & Pug to convert the JSON files it produced into SVG files.\n\nOnce I got that working, I converted it to do this live with an express http service; added some additional support for more than 1 tileset and infinite maps.\n\nI have a lot more to do; here is the first screenshot of it correctly rendering two test maps.\n\n\n[![Screenshot](https://badquanta.github.io/pixeldeck/imgs/Screenshot01.thumbnail.png \"Screenshot\" )](https://badquanta.github.io/pixeldeck/imgs/Screenshot01.png)\n\nCurrently this is accomplished by generating a Tilesheet & Tilemap as separate SVGs; embedding the Pixels of the tiles as a url in the `image` tag's `href` attribute, then exporting each individual tile as an `view` tag with the `viewBox` attribute set to the origin in the `image` of that tile.  But there is only a single `image` tag in the tilesheet SVG; that are visible through named ids.\n\nFor example: `some_tilesheet.svg#1`\nwould should generally 1 tile, the very first tile available in the tilesheet; while `some_tilesheet.svg` sould show the entire sheet.  This is because the tilesheet svg does not specify a size; and will always render to fill the available size when displayed: either zooming in a single tile, or scaling down the entire tilesheet to fit.\n\nThe tilemap is a 2nd SVG. Each tile in this is represented by an individual `image` tag; who's `href` attribute is pointing to a specific tilesheet svg & a tile id fragment: `<tilesheet>.svg#<tile_id>`.  Each tag must have it's height & width set; because the tilesheet does not specify this; and will scale to any size from 100% to 0%.\n\n\n__The immediate next steps are to__: Investigate other means of generating the tilesheet & tilemap svgs.  This is to embed everything into a single HTML file (all  svgs, stylesheets, javascript, and possibly json data.)  The reason is so that this can all be sent to the client all at once.  White this is a multiplayer game; if it is possible to make single player games possible to play offline the embedding of both assets; game logic; and state into one file makes it ideal for  sharing and archiving.\n\nback to [#top](#top)?",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/badquanta/Projects/pixeldeck/docs/REPOVIEW.md",
    "name": "./docs/REPOVIEW.md",
    "content": "Here I will try to document an overview of implementation and examples; as well as the project progress, the goals, and perhaps my thoughts along the way.\n\n## Overview of repository on Monday Sep 30th 2019\n\n* `bin/` home to \"binaries\" (A.K.A: command, program, executable, application, software)\n  * `pixeldeck.js`  command line interface the intended interface for starting and stopping the service.\n* `config/` home to the programmer's collection of defaults\n  * `default.js` the default's default.\n* `docs/` various documentation resides here:\n  * `imgs/` for screenshots, diagrams, etc.\n  * `pixeldeck/` contains jsdoc` auto-generated html content that is revision-controlled.\n  * `README.md` acts as the project's [Home](https://badquanta.github.io/pixeldeck/) `GitHub.io Page'; as well as the other content in this directory.\n* `lib/` meat and potatoes of the project\n  * `service/`\n    * `app.js` contains the root `express()` application instances with basic configuration applied.\n    * `index.js` map routes on `app.js` to the `express handler functions`; but also returns access to directory modules as auto-requires.\n  * `cfg.js` manages the loading of the `../config` settings, as well as the searching for system, user, or current working directory overrides.\n  * `close.js` is a `async function` that manages the shutdown process of the various `pixeldeck` components.\n  * `db.js` contains the service's `loki.js` in memory database; persisted to the local running environment.\n  * `express handler functions:`\n    * `getRoot.js` =>   __/__\n    * `getTilesetSvg.js` => __/*.ts.svg__\n    * `getTilemapSvg.js` => __/*.tm.svg__\n\n      2) [ ] provide a handy-dandy require-on-demand index of all components\n  * `repl.js` is a `function object`\n  provides an interactive interface to the `pixeldeck` service as it runs. Intended for development and possibly administrative purposes; as the service does not need to run the `repl` for it's core functionality.  I'm considering writing a nice T.U.I. for the server-side console... but honestly that's feature-creep.\n    * _WARNING: WILL BE REFACTORED_\n  * `server.js` contains the instance of node.js's `http.httpServer` for this `./app.js`\n  * `start.js` is a `async function` that manages the startup process of various `pixeldeck` components.\n  * `TileSet.js` is my first stab at a `database model` using `Loki.js`.\n  * `ui.js`  currently not used; intended to be an optional developer's or administrator's T.U.I.\n    * _WARNING: WILL BE REFACTORED_\n* `man/`\n  To be installed with pixeldeck command so that man commands work\n  ```shell\n  $>  man pixeldeck\n  $>  man pixeldeck-topic\n  ```\n\n* `res/`\n  The core TileSheets that I'm using for proof of concept.  They may be stripped out of the library; to be included with an optional and replaceable peer dependency\n* `test/`\n  * [TODO](#TODO)\n* `views/`\n  * `credits.pug`\n  * `_tilemap.pug`\n  * `.HTML.pug`\n  * `.SVG.pug`\n  * `main.pug`\n  * `tilemap.pug`\n  * `tileset.pug`\n* `LICENSE` All of this code is licensed under the G.N.U. G.P.L. version 3.0, a markdown formatted version of this license is [available](https://github.com/badquanta/pixeldeck/blob/master/docs/LICENSE.md).",
    "static": true,
    "access": "public"
  }
]